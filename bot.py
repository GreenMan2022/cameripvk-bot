# bot.py
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
API_TOKEN = "8191852280:AAFcOI5tVlJlk4xxnzxAgIUBmW4DW5KElro"
GROUP_ID = -1003033000994
WEB_APP_URL = "https://cameri-github-io.onrender.com/"  # ‚Üê –¢–≤–æ—è GitHub Pages

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    logger.info(f"–ü–æ–ª—É—á–µ–Ω /start –æ—Ç {user.full_name}")

    keyboard = [[{"text": "üé• –û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—ã", "web_app": {"url": WEB_APP_URL}}]]
    reply_markup = {"inline_keyboard": keyboard}

    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=reply_markup
    )


async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        data = update.effective_message.web_app_data.data
        logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")

        import json
        data = json.loads(data)
        event_type = data.get("type", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        camera = data.get("camera", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")
        timestamp = data.get("timestamp", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        user = update.effective_user

        text = (
            f"üö® <b>–°–æ–±—ã—Ç–∏–µ:</b> {event_type}\n"
            f"üìπ <b>–ö–∞–º–µ—Ä–∞:</b> {camera}\n"
            f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
            f"üÜî <b>ID:</b> {user.id}\n"
            f"üïí <b>–í—Ä–µ–º—è:</b> {timestamp}"
        )

        await context.bot.send_message(chat_id=GROUP_ID, text=text, parse_mode="HTML")
        await update.message.reply_text("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def main():
    application = Application.builder().token(API_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()


if __name__ == "__main__":
    main()
