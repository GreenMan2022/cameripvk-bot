# bot.py
import logging
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.types import WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
API_TOKEN = "8191852280:AAFcOI5tVlJlk4xxnzxAgIUBmW4DW5KElro"
GROUP_ID = -1003033000994
WEB_APP_URL = "https://cameri-github-io.onrender.com"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# === –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# === /start ===
@dp.message(Command("start"))
async def start(message: types.Message):
    user = message.from_user
    logger.info(f"–ü–æ–ª—É—á–µ–Ω /start –æ—Ç {user.full_name}")

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="üé• –û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—ã",
        web_app=WebAppInfo(url=WEB_APP_URL)
    ))

    # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: .answer()
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=builder.as_markup())

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ web_app_data ===
@dp.message(F.web_app_data)
async def handle_webapp_data(message: types.Message):
    try:
        data = message.web_app_data.data
        logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")

        import json
        data = json.loads(data)
        event_type = data.get("type", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        camera = data.get("camera", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")
        timestamp = data.get("timestamp", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        user = message.from_user

        text = (
            f"üö® <b>–°–æ–±—ã—Ç–∏–µ:</b> {event_type}\n"
            f"üìπ <b>–ö–∞–º–µ—Ä–∞:</b> {camera}\n"
            f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
            f"üÜî <b>ID:</b> {user.id}\n"
            f"üïí <b>–í—Ä–µ–º—è:</b> {timestamp}"
        )

        await bot.send_message(chat_id=GROUP_ID, text=text, parse_mode="HTML")
        await message.answer("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# === –ó–∞–ø—É—Å–∫ ===
async def main():
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
