from telegram import Update, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes
import os
import asyncio
import time

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8191852280:AAFcOI5tVlJlk4xxnzxAgIUBmW4DW5KElro")
WEB_APP_URL = os.environ.get("WEB_APP_URL", "https://cameri-github-io.onrender.com")
PORT = int(os.environ.get("PORT", 10000))  # Render –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø–æ—Ä—Ç

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å)
ADMIN_CHAT_ID = None

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global ADMIN_CHAT_ID
    if not ADMIN_CHAT_ID:
        ADMIN_CHAT_ID = update.effective_chat.id
    await update.message.reply_text(
        "üé• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—ã:",
        reply_markup={
            "inline_keyboard": [
                [{
                    "text": "üì∑ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—ã",
                    "web_app": {"url": WEB_APP_URL}
                }]
            ]
        }
    )

# === –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ===
async def keep_alive():
    while True:
        try:
            await asyncio.sleep(120)  # –ñ–¥–µ–º 2 –º–∏–Ω—É—Ç—ã
            await app.bot.send_message(chat_id=ADMIN_CHAT_ID, text="Ping!")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ ping: {e}")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start...")
    
    # –°–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
    loop = asyncio.get_event_loop()
    loop.create_task(keep_alive())
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
    loop.create_task(app.run_polling())
